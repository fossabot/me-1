{
  "name": "me",
  "author": {
    "name": "Randy Tarampi",
    "email": "rt@randytarampi.ca",
    "url": "https://www.randytarampi.ca"
  },
  "bugs": "https://github.com/randytarampi/me/issues",
  "devDependencies": {
    "@babel/cli": "^7.7.7",
    "@babel/core": "^7.7.7",
    "@babel/plugin-proposal-class-properties": "^7.7.4",
    "@babel/plugin-proposal-object-rest-spread": "^7.7.7",
    "@babel/plugin-transform-property-literals": "^7.7.4",
    "@babel/polyfill": "^7.7.0",
    "@babel/preset-env": "^7.7.7",
    "@babel/preset-react": "^7.7.4",
    "@babel/register": "^7.7.7",
    "babel-eslint": "^10.0.3",
    "babel-loader": "^8.0.6",
    "babel-plugin-istanbul": "^5.2.0",
    "babel-plugin-lodash": "^3.3.4",
    "babel-plugin-minify-replace": "^0.5.0",
    "chai": "^4.2.0",
    "chai-enzyme": "^1.0.0-beta.1",
    "cheerio": "^1.0.0-rc.3",
    "chokidar": "^3.3.1",
    "commander": "^4.0.1",
    "config": "^3.2.4",
    "connect-history-api-fallback": "^1.6.0",
    "copy-webpack-plugin": "^5.1.1",
    "coveralls": "^3.0.9",
    "css-loader": "^3.4.0",
    "del": "^5.1.0",
    "enzyme": "^3.10.0",
    "enzyme-adapter-react-16": "^1.15.2",
    "eslint-plugin-import": "^2.19.1",
    "eslint-plugin-react": "^7.17.0",
    "expose-loader": "^0.7.5",
    "express": "^4.17.1",
    "file-loader": "^5.0.2",
    "gulp": "^4.0.2",
    "gulp-autoprefixer": "^7.0.1",
    "gulp-clean-css": "^4.2.0",
    "gulp-concat": "^2.6.1",
    "gulp-eslint": "^6.0.0",
    "gulp-if": "^3.0.0",
    "gulp-mocha": "^7.0.2",
    "gulp-pug": "^4.0.1",
    "gulp-pug-linter": "^1.3.0",
    "gulp-sass": "^4.0.2",
    "gulp-sass-lint": "^1.4.0",
    "gulp-sourcemaps": "^2.6.5",
    "habitat": "^3.1.2",
    "history": "^4.10.1",
    "html-webpack-harddisk-plugin": "^1.0.1",
    "html-webpack-plugin": "^4.0.0-beta.5",
    "js-yaml": "^3.13.1",
    "jsdom": "^15.2.1",
    "json-stringify-safe": "^5.0.1",
    "koa-compress": "^3.0.0",
    "koa-connect": "^2.0.1",
    "koa-mount": "^4.0.0",
    "koa-static": "^5.0.0",
    "lerna": "^3.19.0",
    "lodash": "^4.17.15",
    "mini-css-extract-plugin": "^0.8.2",
    "mocha": "^6.2.2",
    "mock-local-storage": "^1.1.11",
    "nyc": "^14.1.1",
    "optimize-css-assets-webpack-plugin": "^5.0.3",
    "postcss-loader": "^3.0.0",
    "postcss-preset-env": "^6.7.0",
    "proxyquire": "^2.1.3",
    "pug-loader": "^2.4.0",
    "redux-mock-store": "^1.5.4",
    "resolve-url-loader": "^3.1.1",
    "resume-cli": "^1.2.7",
    "sass-loader": "^8.0.0",
    "semver-compare": "^1.0.0",
    "serverless": "^1.60.0",
    "serverless-api-compression": "^1.0.1",
    "serverless-domain-manager": "^3.3.0",
    "serverless-dynamodb-local": "github:randytarampi/serverless-dynamodb-local#me-release",
    "serverless-offline": "^5.12.1",
    "serverless-plugin-tracing": "^2.0.0",
    "serverless-plugin-warmup": "^4.7.1-rc.1",
    "serverless-secrets": "github:RishitKedia/serverless-secrets#fix-get-parameters-limit-of-10",
    "serverless-webpack": "^5.3.1",
    "sinon": "^7.5.0",
    "svg-path-loader": "^0.0.4",
    "syncpack": "^4.5.4",
    "terser-webpack-plugin": "^2.3.1",
    "vinyl-paths": "^3.0.1",
    "webpack": "^4.41.4",
    "webpack-bundle-analyzer": "^3.6.0",
    "webpack-cli": "^3.3.10",
    "webpack-node-externals": "^1.7.2",
    "webpack-sentry-plugin": "^2.0.2",
    "webpack-serve": "^2.0.3",
    "workbox-webpack-plugin": "^4.3.1",
    "ws": "^7.2.1",
    "yargs": "^15.0.2"
  },
  "greenkeeper": {
    "commitMessages": {
      "initialBadge": "docs(greenkeeper): Add Greenkeeper badge.",
      "initialDependencies": "chore(greenkeeper): Update dependencies.",
      "initialBranches": "chore(greenkeeper): Whitelist greenkeeper branches.",
      "dependencyUpdate": "chore(greenkeeper): ${dependency}@${version}.",
      "devDependencyUpdate": "chore(greenkeeper): ${dependency}@${version}.",
      "dependencyPin": "fix(greenkeeper): Pin ${dependency}@${oldVersion}.",
      "devDependencyPin": "fix(greenkeeper): Pin ${dependency}@${oldVersion}."
    },
    "prTitles": {
      "initialPR": "chore(greenkeeper): Update dependencies and enable Greenkeeper",
      "initialPrBadge": "docs(greenkeeper): Add Greenkeeper badge and enable Greenkeeper",
      "initialPrBadgeOnly": "docs(greenkeeper): Add Greenkeeper badge",
      "initialSubgroupPR": "chore(greenkeeper): Update dependencies for ${group}",
      "basicPR": "chore(greenkeeper): Update ${dependency}",
      "groupPR": "chore(greenkeeper): Update ${dependency} for ${group}"
    }
  },
  "private": true,
  "repository": "randytarampi/me.git",
  "scripts": {
    "bootstrap": "./bin/bootstrap.sh",
    "clean": "./bin/clean.sh",
    "cover": "yarn run cover:actual; yarn run cover:collect",
    "cover:actual": "rm -rf .nyc_output/ coverage/ && lerna run cover --no-bail --concurrency $(node -p \"require(\\\"os\\\").cpus().length\")",
    "cover:collect": "mkdir -p .nyc_output/ coverage/ && lerna exec -- \"if [ -d \"./.nyc_output\" ]; then cp -r .nyc_output ../..; fi;\" && nyc report --reporter=lcov",
    "coveralls": "cat coverage/lcov.info | coveralls",
    "kill": "lerna run kill",
    "prepare": "./bin/prepare.sh",
    "pretest": "NODE_ENV=test lerna run pretest --no-bail --concurrency $(node -p \"require(\\\"os\\\").cpus().length\")",
    "pretest:service:dynamodb-local": "bin/pretest:service:dynamodb-local.sh",
    "test": "NODE_ENV=test lerna run test --no-bail --concurrency $(node -p \"require(\\\"os\\\").cpus().length\")",
    "start:www": "lerna run start --stream --scope=@randy.tarampi/www",
    "start:service": "lerna run start --stream --scope=@randy.tarampi/service",
    "start:web": "lerna run start --stream --scope=@randy.tarampi/{service,www}"
  },
  "workspaces": [
    "packages/*"
  ]
}
